
<!DOCTYPE html>
<html lang="en">
	<head>
		<title>Monocurl | Learn</title>

		<!-- Meta  -->
		<meta charset="UTF-8">
		<meta name="description" content="Monocurl is a desktop application designed to create mathematically-defined slideshows and videos.">
		<meta name="keywords" content="Monocurl, math, animation, presentations, slideshows">
		<meta name="author" content="Manu Bhat">

		<link rel="icon" href="/img/monocurl_icon.png">

		<!-- CSS -->
		<link rel="stylesheet" href="/css/main.css">
		<link rel="stylesheet" href="/css/lessons.css">

		
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/highlight.js@11.9.0/styles/github.min.css">
            <script src="https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.9.0/build/highlight.min.js"></script>
        

		<!-- JS -->
		
            <script>
                hljs.highlightAll();

                function rescroll() {
                    var lastElement = -1
                    document.querySelectorAll("h2").forEach((h2, index) => {
                        const rect = h2.getBoundingClientRect()
                        document.getElementById(`label-${index}`).className = ""
                        if (rect.top < 400) {
                            lastElement = index
                        }
                    });
                    if (lastElement !== -1) {
                        document.getElementById(`label-${lastElement}`).className = "active"
                        lastElement.className = "active"
                    }
                }

                document.addEventListener('DOMContentLoaded', () => {
                    document.querySelectorAll("h2").forEach((h2, index) => {
                        h2.id = `section-${index}`;
                    });
                });

                document.onscroll = rescroll
            </script>
        
	</head>
    
	<!-- Main -->
	<body>
		<nav>
			<a id='monocurl-title' href="/"> Monocurl </a> 
			
			<div class="spacer"> </div>

			<a class="navlink active" href="/learn/0_What_is_Monocurl">           Learn    </a>
			<a class="navlink " href="/docs/%20camera">     Docs     </a>
			<a class="navlink " href="/examples">        Examples </a>
			<a class="navlink " href="/credits">         Credits  </a>
		</nav>

		<main>
    <aside><h1> Learn </h1><a href="0_What_is_Monocurl" class="">0 What is Monocurl</a><a href="1_Monocurl_Language" class="">1 Monocurl Language</a><a href="2_Meshes" class="">2 Meshes</a><a href="3_Animation_Basics" class="">3 Animation Basics</a><a href="4_Examples_of_Animations" class="">4 Examples of Animations</a><a href="5_Iterator_Follower_Paradigm" class="current">5 Iterator Follower Paradigm</a><a href="6_Interpolation_Animations" class="">6 Interpolation Animations</a><a href="7_Tagging_Mechanics" class="">7 Tagging Mechanics</a><a href="8_Editor_Tips_and_Advice" class="">8 Editor Tips and Advice</a><a href="9_Future_Works" class="">9 Future Works</a></aside><div id="content"><h1>5. The Iterator-Follower Paradigm</h1>
<p>While delayed execution has its benefits, you can make mistakes very easily. In this section, we'll introduce a way of thinking to eliminate these issues.</p>
<h2>5.1 The problem</h2>
<p>In particular, let's look at why delayed execution can become confusing. Suppose that Monocurl had a Shift animation that shifts the given variable tree upon execution (the standard library does not provide such an animation, we are speaking hypothetically). Then, consider the follow snippet</p>
<pre><code class="language-swift">var mesh = Circle:
    center: ORIGIN
    radius: 1
    tag: {}
    stroke: BLACK

play += Show:
    mesh&amp;: mesh
    sticky: 0

/* over 1 second, shift the given mesh to {1, 0, 0} */
play += Shift:
    mesh&amp;: mesh
    delta: {1, 0, 0}
    time: 1
    sticky: 0

play += Transform:
    mesh&amp;: circle
    target: next
    null_action: fade
    time: 1
    sticky: 0
</code></pre>
<h2>5.2 The solution</h2>
<p>I'll present a model and paradigm which does pretty good at avoiding these issues. It's not like you have to use this model, but I think that if you don't, it can get confusing very quickly.</p>
<p>The idea with the iterator-follower model is to have separate variables for those to be used on screen and those to be used for intermediate computations. The iterator cycles through the different discrete "states", whereas the follower is meant to be on screen, and after the iterator finishes cycling, the follower does its job by continously going through the same states as before. This might seem redundant, but i think it really does help break down really complex scenes, and provide a sense of continuinity.</p>
<h2>5.3 Toy Example</h2>
<p>Lets look at a VERY rough example of what is meant.</p>
<p>let it1 = 0
let it2 = 0
let it3 = 0</p>
<p>play += ...
play += ...
play += ...</p>
<h2>5.4 A Better Way to do Things</h2>
<p>Ok, this illustrates the idea clearly. It's very clear what the role of different stuff are. At the same time, this is a really bad way to write Monocurl code. Lets rewrite this to a manner that's more comfortable.</p>
<p>var it = 0
play +=</p>
<p>it = 0
play += </p>
<p>play += ...</p>
<p>This is better, and more likely how you write monocurl code. Admiteddly, Monocurl is still definitely too verbose. I have some ideas on how to fix it. However, the good news is that I think these are all problems that can easily be fixed by a language feature if done right. </p>
<p>We'll now look at more advanced versions of interpolation.</p><div id="next-lessons"><a href="/learn/4_Examples_of_Animations"> Previous Lesson </a><a href="/learn/6_Interpolation_Animations"> Next Lesson </a></div></div><div class="sub-sections"><h1> Sections </h1><a id="label-0" href="#section-0" class="active">5.1 The problem</a><a id="label-1" href="#section-1" class="">5.2 The solution</a><a id="label-2" href="#section-2" class="">5.3 Toy Example</a><a id="label-3" href="#section-3" class="">5.4 A Better Way to do Things</a></div>
		</main>

		<footer>
			<div id="footer-legal"> 
				Copyright &copy Monocurl 2023. All rights reserved. 
			</div>

			<ul id="footer-links">
				<li> <a href="https://discord.com/invite/7g94JR3SAD">           Discord       </a> </li>
				<li> <a href="https://www.youtube.com/channel/monocurl">        YouTube       </a> </li>
				<li> <a href="https://github.com/monocurl/monocurl">			Source        </a> </li>
				<li> <a href="https://github.com/monocurl/monocurl.github.io">  Website Build </a> </li>
			</ul>
		</footer>
	</body>
</html>
    